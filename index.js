var fs = require('fs');


var Captcha = require('./Captcha');

var drawBackground = require('./drawBackground');
var drawLines1 = require('./drawLines1');
var drawLines2 = require('./drawLines2');
var drawText = require('./drawText');
var drawWarp = require('./drawWarp');
var drawResize = require('./drawResize');

function generate(count) {
    var captcha = new Captcha({
        height: 76 * 2,
        width: 300 * 2,
        font: 'Arial',
        fontsize: [0.3, 0.6],	// font size, the percent of height, default is random between [0.4, 0.5) 
        lines: [30, 40],			// number of interferential lines, default is random between [2, 4) 
        lineWidth: [5, 10],		// the width of interferential line, default is random between [2, 5) 
        text: randomNumberString(5),
    });
    
    var text = captcha.text();     // Returns captcha text (randomly generated by default) 
    captcha.height();   // Returns captcha height (150 by default) 
    captcha.width();    // Returns captcha width (300 by default) 

    captcha.use(drawBackground);
    captcha.use(drawLines1);
    captcha.use(drawText);
    captcha.use(drawWarp);
    captcha.use(drawLines2);
    captcha.use(drawResize);
     
    captcha.generate(); // Draws the image to the canvas 
      
    var buffer = captcha.buffer("png"); // outputs an image stream. type can be either png or jpeg (png is the default) 
    
    fs.open('generated/' + text + '.png', 'w', function (err, fd) {
        fs.write(fd, buffer, 0, buffer.length, null, function() {
            fs.close(fd, function() {
                console.log('finished with captcha ' + text);
                if(count > 1) {
                    generate(count - 1);
                } else {
                    console.log('FINISHED!');
                }
            });
        })
    });
}

function randomNumberString(count) {
    var string = '';

    for(var i = 0; i < count; i++) {
        string += Math.floor(Math.random() * 10);
    }

    if (fs.existsSync('generated/' + string + '.png')) {
        return randomNumberString(count);
    }

    return string;
}

function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

generate(0);
